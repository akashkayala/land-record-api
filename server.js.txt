require('dotenv').config();
const express = require('express');
const mysql = require('mysql2/promise');
const PDFDocument = require('pdfkit');

const app = express();
app.use(express.json());

// MySQL connection pool
const pool = mysql.createPool({
  host: process.env.DB_HOST,
  user: process.env.DB_USER,
  password: process.env.DB_PASSWORD,
  database: process.env.DB_NAME
});

app.post('/api/land-record', async (req, res) => {
  const { parcel_id, plot_number, owner_name } = req.body;

  let query = 'SELECT * FROM land_records WHERE 1=1';
  let params = [];
  if (parcel_id) { query += ' AND parcel_id = ?'; params.push(parcel_id); }
  if (plot_number) { query += ' AND plot_number = ?'; params.push(plot_number); }
  if (owner_name) { query += ' AND owner_name = ?'; params.push(owner_name); }

  try {
    const [rows] = await pool.execute(query, params);

    if (!rows.length) {
      return res.status(404).json({ message: 'No record found' });
    }

    // Generate PDF
    const doc = new PDFDocument();
    let buffers = [];
    doc.on('data', buffers.push.bind(buffers));
    doc.on('end', () => {
      const pdfData = Buffer.concat(buffers);
      res.setHeader('Content-Type', 'application/pdf');
      res.setHeader('Content-Disposition', 'attachment; filename=land_record.pdf');
      res.send(pdfData);
    });

    doc.fontSize(18).text('Land Record Summary', { align: 'center' });
    doc.moveDown();
    Object.entries(rows[0]).forEach(([key, value]) => {
      doc.fontSize(12).text(`${key}: ${value}`);
    });
    doc.end();

  } catch (err) {
    console.error(err);
    res.status(500).json({ message: 'Server error' });
  }
});

const PORT = process.env.PORT || 3000;
app.listen(PORT, () => console.log(`Server running on port ${PORT}`));
